syntax = "proto3";

package bussiness;

import "vlc.proto";

// business data
// ZMessage.type = Z_TYPE_CHAT
message ZChat {
	bytes message_data = 1;
	vlc.ClockInfo clock = 2;
}

// ZMessage.type = Z_TYPE_HPOINTS
message HPoints {
	bytes op_address = 1;
	bytes event_id = 2;
	uint64 points = 3;  // new points
}

// ZMessage.type = Z_TYPE_GATEWAY
// Gateway just only needs read api
message ZGateway {
    string request_id = 1;
    GatewayType type = 2;
    QueryMethod method = 3;
    bytes data = 4;
}

enum GatewayType {
  GATEWAY_TYPE_CLOCK_NODE = 0;
  GATEWAY_TYPE_MERGE_LOG = 1;   // ref merge log
  GATEWAY_TYPE_NODE_INFO = 2;  // heartbeat or node info
  GATEWAY_TYPE_Z_MESSAGE = 3;  // p2p message
}

enum QueryMethod {
    QUERY_BY_MSGID = 0;
    QUERY_BY_TABLE_KEYID = 1;
    QUERY_STATUS = 2;
}

// ZGateway.type = GATEWAY_TYPE_CLOCK_NODE
// please see ClockInfos in vlc.proto 

// ZGateway.type = GATEWAY_TYPE_NODE_INFO
message NodeInfo {
    repeated string node_ids = 1;
}

message QueryResponse {
    string request_id = 1;
    bool success = 2;
    string reason = 3;
    bytes data = 4;
}

// ZGateway.method = QUERY_BY_MSGID
message QueryByMsgID {
    string msg_id = 1;
}

// ZGateway.method = QUERY_BY_TABLE_KEYID
message QueryByTableKeyID {
    uint64 last_pos = 1;
}

// ZGateway.method = QUERY_STATUS
message QueryStatus {
    uint64 clock_total = 1;
    uint64 mergelog_total = 2;
    uint64 zmessage_total = 3;
}